# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import config_pb2 as config__pb2


class MessagingStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.authenticateUser = channel.unary_unary(
        '/ChatApplication.Messaging/authenticateUser',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.serverResponse.FromString,
        )
    self.authenticateReceiver = channel.unary_unary(
        '/ChatApplication.Messaging/authenticateReceiver',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.serverResponse.FromString,
        )
    self.sendMsg = channel.unary_unary(
        '/ChatApplication.Messaging/sendMsg',
        request_serializer=config__pb2.clientMsg.SerializeToString,
        response_deserializer=config__pb2.Empty.FromString,
        )
    self.recvMsg = channel.unary_stream(
        '/ChatApplication.Messaging/recvMsg',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.serverMsg.FromString,
        )
    self.offlineMessages = channel.unary_unary(
        '/ChatApplication.Messaging/offlineMessages',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.offlineMessageList.FromString,
        )
    self.checkMsg = channel.unary_unary(
        '/ChatApplication.Messaging/checkMsg',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.serverResponse.FromString,
        )
    self.checkOfflineMsg = channel.unary_unary(
        '/ChatApplication.Messaging/checkOfflineMsg',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.serverResponse.FromString,
        )
    self.getCurrentUsers = channel.unary_unary(
        '/ChatApplication.Messaging/getCurrentUsers',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.activeusers.FromString,
        )
    self.acknowledgeServer = channel.unary_unary(
        '/ChatApplication.Messaging/acknowledgeServer',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.Empty.FromString,
        )
    self.appendNotification = channel.unary_unary(
        '/ChatApplication.Messaging/appendNotification',
        request_serializer=config__pb2.notification.SerializeToString,
        response_deserializer=config__pb2.Empty.FromString,
        )
    self.getNotification = channel.unary_unary(
        '/ChatApplication.Messaging/getNotification',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.notificationResponse.FromString,
        )
    self.newChat = channel.unary_unary(
        '/ChatApplication.Messaging/newChat',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.Empty.FromString,
        )
    self.checkName = channel.unary_unary(
        '/ChatApplication.Messaging/checkName',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.rejectedList.FromString,
        )
    self.clearRejectionList = channel.unary_unary(
        '/ChatApplication.Messaging/clearRejectionList',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.Empty.FromString,
        )
    self.alertNotification = channel.unary_unary(
        '/ChatApplication.Messaging/alertNotification',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.serverResponse.FromString,
        )
    self.clearNotificationList = channel.unary_unary(
        '/ChatApplication.Messaging/clearNotificationList',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.Empty.FromString,
        )


class MessagingServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def authenticateUser(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def authenticateReceiver(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def sendMsg(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def recvMsg(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def offlineMessages(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def checkMsg(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def checkOfflineMsg(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getCurrentUsers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def acknowledgeServer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def appendNotification(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getNotification(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def newChat(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def checkName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def clearRejectionList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def alertNotification(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def clearNotificationList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MessagingServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'authenticateUser': grpc.unary_unary_rpc_method_handler(
          servicer.authenticateUser,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.serverResponse.SerializeToString,
      ),
      'authenticateReceiver': grpc.unary_unary_rpc_method_handler(
          servicer.authenticateReceiver,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.serverResponse.SerializeToString,
      ),
      'sendMsg': grpc.unary_unary_rpc_method_handler(
          servicer.sendMsg,
          request_deserializer=config__pb2.clientMsg.FromString,
          response_serializer=config__pb2.Empty.SerializeToString,
      ),
      'recvMsg': grpc.unary_stream_rpc_method_handler(
          servicer.recvMsg,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.serverMsg.SerializeToString,
      ),
      'offlineMessages': grpc.unary_unary_rpc_method_handler(
          servicer.offlineMessages,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.offlineMessageList.SerializeToString,
      ),
      'checkMsg': grpc.unary_unary_rpc_method_handler(
          servicer.checkMsg,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.serverResponse.SerializeToString,
      ),
      'checkOfflineMsg': grpc.unary_unary_rpc_method_handler(
          servicer.checkOfflineMsg,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.serverResponse.SerializeToString,
      ),
      'getCurrentUsers': grpc.unary_unary_rpc_method_handler(
          servicer.getCurrentUsers,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.activeusers.SerializeToString,
      ),
      'acknowledgeServer': grpc.unary_unary_rpc_method_handler(
          servicer.acknowledgeServer,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.Empty.SerializeToString,
      ),
      'appendNotification': grpc.unary_unary_rpc_method_handler(
          servicer.appendNotification,
          request_deserializer=config__pb2.notification.FromString,
          response_serializer=config__pb2.Empty.SerializeToString,
      ),
      'getNotification': grpc.unary_unary_rpc_method_handler(
          servicer.getNotification,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.notificationResponse.SerializeToString,
      ),
      'newChat': grpc.unary_unary_rpc_method_handler(
          servicer.newChat,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.Empty.SerializeToString,
      ),
      'checkName': grpc.unary_unary_rpc_method_handler(
          servicer.checkName,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.rejectedList.SerializeToString,
      ),
      'clearRejectionList': grpc.unary_unary_rpc_method_handler(
          servicer.clearRejectionList,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.Empty.SerializeToString,
      ),
      'alertNotification': grpc.unary_unary_rpc_method_handler(
          servicer.alertNotification,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.serverResponse.SerializeToString,
      ),
      'clearNotificationList': grpc.unary_unary_rpc_method_handler(
          servicer.clearNotificationList,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ChatApplication.Messaging', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class GroupMessagingStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.authenticateGrpUser = channel.unary_unary(
        '/ChatApplication.GroupMessaging/authenticateGrpUser',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.serverGrpResponse.FromString,
        )
    self.getGroupMembers = channel.unary_unary(
        '/ChatApplication.GroupMessaging/getGroupMembers',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.getList.FromString,
        )
    self.sendMsgToGrp = channel.unary_unary(
        '/ChatApplication.GroupMessaging/sendMsgToGrp',
        request_serializer=config__pb2.groupMsg.SerializeToString,
        response_deserializer=config__pb2.sendMsgAck.FromString,
        )
    self.checkGrpMsg = channel.unary_unary(
        '/ChatApplication.GroupMessaging/checkGrpMsg',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.serverResponse.FromString,
        )
    self.recvMsgFromGrp = channel.unary_stream(
        '/ChatApplication.GroupMessaging/recvMsgFromGrp',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.groupMsg.FromString,
        )
    self.offlineGrpMsgs = channel.unary_unary(
        '/ChatApplication.GroupMessaging/offlineGrpMsgs',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.getOfflineMsgs.FromString,
        )
    self.checkOfflineGrpMsg = channel.unary_unary(
        '/ChatApplication.GroupMessaging/checkOfflineGrpMsg',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.serverResponse.FromString,
        )
    self.acknowledgeServerGrp = channel.unary_unary(
        '/ChatApplication.GroupMessaging/acknowledgeServerGrp',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.Empty.FromString,
        )
    self.getActiveUsers = channel.unary_unary(
        '/ChatApplication.GroupMessaging/getActiveUsers',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.getList.FromString,
        )
    self.logout = channel.unary_unary(
        '/ChatApplication.GroupMessaging/logout',
        request_serializer=config__pb2.clientRequest.SerializeToString,
        response_deserializer=config__pb2.Empty.FromString,
        )


class GroupMessagingServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def authenticateGrpUser(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getGroupMembers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def sendMsgToGrp(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def checkGrpMsg(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def recvMsgFromGrp(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def offlineGrpMsgs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def checkOfflineGrpMsg(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def acknowledgeServerGrp(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getActiveUsers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def logout(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GroupMessagingServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'authenticateGrpUser': grpc.unary_unary_rpc_method_handler(
          servicer.authenticateGrpUser,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.serverGrpResponse.SerializeToString,
      ),
      'getGroupMembers': grpc.unary_unary_rpc_method_handler(
          servicer.getGroupMembers,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.getList.SerializeToString,
      ),
      'sendMsgToGrp': grpc.unary_unary_rpc_method_handler(
          servicer.sendMsgToGrp,
          request_deserializer=config__pb2.groupMsg.FromString,
          response_serializer=config__pb2.sendMsgAck.SerializeToString,
      ),
      'checkGrpMsg': grpc.unary_unary_rpc_method_handler(
          servicer.checkGrpMsg,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.serverResponse.SerializeToString,
      ),
      'recvMsgFromGrp': grpc.unary_stream_rpc_method_handler(
          servicer.recvMsgFromGrp,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.groupMsg.SerializeToString,
      ),
      'offlineGrpMsgs': grpc.unary_unary_rpc_method_handler(
          servicer.offlineGrpMsgs,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.getOfflineMsgs.SerializeToString,
      ),
      'checkOfflineGrpMsg': grpc.unary_unary_rpc_method_handler(
          servicer.checkOfflineGrpMsg,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.serverResponse.SerializeToString,
      ),
      'acknowledgeServerGrp': grpc.unary_unary_rpc_method_handler(
          servicer.acknowledgeServerGrp,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.Empty.SerializeToString,
      ),
      'getActiveUsers': grpc.unary_unary_rpc_method_handler(
          servicer.getActiveUsers,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.getList.SerializeToString,
      ),
      'logout': grpc.unary_unary_rpc_method_handler(
          servicer.logout,
          request_deserializer=config__pb2.clientRequest.FromString,
          response_serializer=config__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ChatApplication.GroupMessaging', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
